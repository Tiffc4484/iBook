{"ast":null,"code":"var _jsxFileName = \"/Users/tiffany/Desktop/iBook/src/Authentication/LoginScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport InputBox from \"/InputBox.js\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginScreen = props => {\n  _s();\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  function handleUsername(evt) {\n    setUsername(evt.target.value);\n  }\n\n  function handlePassword(evt) {\n    setPassword(evt.target.value);\n  }\n\n  async function handleSubmit(evt) {\n    evt.preventDefault();\n\n    if (!evt.target.checkValidity()) {\n      return evt.target.classList.add(\"was-validated\");\n    }\n\n    setUsername(\"\");\n    setPassword(\"\");\n    const hash = await password.hashCode();\n    const checked = document.querySelector(\".form-check-input\").checked;\n    const data = {\n      username: username,\n      password: hash,\n      checked: checked\n    };\n    fetch(\"/authentication/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    }).then(resRaw => {\n      if (!resRaw.ok) {\n        resRaw.text().then(res => {\n          alert(res);\n        });\n      } else {\n        alert(\"Log in succeed\"); //props.refreshPage((prev) => !prev);\n        // history.push(\"/overview\");\n      }\n    }).catch(err => {\n      alert(err);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"form\",\n    onSubmit: handleSubmit,\n    noValidate: true,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center mb-4\",\n      children: \"Log In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(InputBox, {\n      label: \"Username\",\n      value: username,\n      onChange: handleUsername,\n      feedback: \"Please provide a valid username or email address\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(InputBox, {\n      label: \"Password\",\n      value: password,\n      onChange: handlePassword,\n      type: \"password\",\n      feedback: \"Please provide a valid password\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3 form-check\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form-check-label\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          className: \"form-check-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), \"Keep Me Logged in\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"mb-3 btn btn-custom text-center\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-2 d-flex justify-content-end\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        className: \"text-end d-block\",\n        to: \"/auth/signup\",\n        children: \"Sign up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LoginScreen, \"Lrw7JeD9zj6OUWhT/IH4OIvPKEk=\");\n\n_c = LoginScreen;\nexport default LoginScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginScreen\");","map":{"version":3,"sources":["/Users/tiffany/Desktop/iBook/src/Authentication/LoginScreen.js"],"names":["React","useState","InputBox","Link","LoginScreen","props","username","setUsername","password","setPassword","handleUsername","evt","target","value","handlePassword","handleSubmit","preventDefault","checkValidity","classList","add","hash","hashCode","checked","document","querySelector","data","fetch","method","headers","body","JSON","stringify","then","resRaw","ok","text","res","alert","catch","err"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport InputBox from \"/InputBox.js\";\nimport {Link} from \"react-router-dom\";\n\nconst LoginScreen = (props) => {\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n    function handleUsername(evt) {\n        setUsername(evt.target.value);\n    }\n\n    function handlePassword(evt) {\n        setPassword(evt.target.value);\n    }\n\n    async function handleSubmit(evt) {\n        evt.preventDefault();\n        if (!evt.target.checkValidity()) {\n            return evt.target.classList.add(\"was-validated\");\n        }\n        setUsername(\"\");\n        setPassword(\"\");\n        const hash = await password.hashCode();\n        const checked = document.querySelector(\".form-check-input\").checked;\n        const data = {\n            username: username,\n            password: hash,\n            checked: checked,\n        };\n        fetch(\"/authentication/login\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(data),\n        })\n            .then((resRaw) => {\n                if (!resRaw.ok) {\n                    resRaw.text().then((res) => {\n                        alert(res);\n                    });\n                } else {\n                    alert(\"Log in succeed\");\n                    //props.refreshPage((prev) => !prev);\n                    // history.push(\"/overview\");\n                }\n            })\n            .catch((err) => {\n                alert(err);\n            });\n    }\n\n    return (\n        <form className=\"form\" onSubmit={handleSubmit} noValidate>\n            <h1 className=\"text-center mb-4\">Log In</h1>\n            <InputBox\n                label=\"Username\"\n                value={username}\n                onChange={handleUsername}\n                feedback=\"Please provide a valid username or email address\"\n                required={true}\n            />\n            <InputBox\n                label=\"Password\"\n                value={password}\n                onChange={handlePassword}\n                type=\"password\"\n                feedback=\"Please provide a valid password\"\n                required={true}\n            />\n\n            <div className=\"mb-3 form-check\">\n                <label className=\"form-check-label\">\n                    <input type=\"checkbox\" className=\"form-check-input\" />\n                    Keep Me Logged in\n                </label>\n            </div>\n            <button className=\"mb-3 btn btn-custom text-center\">Submit</button>\n            <div className=\"mb-2 d-flex justify-content-end\">\n                <Link className=\"text-end d-block\" to=\"/auth/signup\">\n                    Sign up\n                </Link>\n            </div>\n        </form>\n    )\n\n}\n\nexport default LoginScreen;\n\n"]},"metadata":{},"sourceType":"module"}