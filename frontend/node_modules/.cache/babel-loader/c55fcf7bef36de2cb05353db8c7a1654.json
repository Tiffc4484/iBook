{"ast":null,"code":"var _jsxFileName = \"/Users/tiffany/Desktop/iBook/frontend/src/Authentication/InputBox.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport _uniqueId from \"lodash/uniqueId\";\n/**\n * InputBox is a controlled component that represents a input and label.\n *\n * @param props.label (required) label\n * @param props.value (required) value\n * @param props.onChange (required) handler of input value\n * @param props.type \"text\" | \"password\" | \"email\" | ... , text by default\n * @param props.feedback feedback if the input fails validation\n * @param props.required true | false, false by default\n * @returns {JSX.Element}\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function InputBox(props) {\n  _s();\n\n  const [id] = useState(_uniqueId(\"input-\"));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"my-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"form-label\",\n      htmlFor: id,\n      children: props.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: props.type === undefined ? \"text\" : props.type,\n      className: \"form-control fs-5\",\n      id: id,\n      value: props.value,\n      onChange: props.onChange,\n      placeholder: \"\",\n      required: props.required || false,\n      min: 0\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"invalid-feedback\" + (props.feedback === undefined ? \" d-none\" : \"\"),\n      children: props.feedback\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}\n\n_s(InputBox, \"WieflpWDUrqUAhLOZ6Qg2CU6jX0=\");\n\n_c = InputBox;\nInputBox.propTypes = {\n  label: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  type: PropTypes.string,\n  feedback: PropTypes.string,\n  required: PropTypes.bool\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"InputBox\");","map":{"version":3,"sources":["/Users/tiffany/Desktop/iBook/frontend/src/Authentication/InputBox.js"],"names":["React","useState","PropTypes","_uniqueId","InputBox","props","id","label","type","undefined","value","onChange","required","feedback","propTypes","string","isRequired","func","bool"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACpC,QAAM,CAACC,EAAD,IAAOL,QAAQ,CAACE,SAAS,CAAC,QAAD,CAAV,CAArB;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACI;AAAO,MAAA,SAAS,EAAC,YAAjB;AAA8B,MAAA,OAAO,EAAEG,EAAvC;AAAA,gBACKD,KAAK,CAACE;AADX;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AACI,MAAA,IAAI,EAAEF,KAAK,CAACG,IAAN,KAAeC,SAAf,GAA2B,MAA3B,GAAoCJ,KAAK,CAACG,IADpD;AAEI,MAAA,SAAS,EAAC,mBAFd;AAGI,MAAA,EAAE,EAAEF,EAHR;AAII,MAAA,KAAK,EAAED,KAAK,CAACK,KAJjB;AAKI,MAAA,QAAQ,EAAEL,KAAK,CAACM,QALpB;AAMI,MAAA,WAAW,EAAE,EANjB;AAOI,MAAA,QAAQ,EAAEN,KAAK,CAACO,QAAN,IAAkB,KAPhC;AAQI,MAAA,GAAG,EAAE;AART;AAAA;AAAA;AAAA;AAAA,YAJJ,eAcI;AACI,MAAA,SAAS,EACL,sBAAsBP,KAAK,CAACQ,QAAN,KAAmBJ,SAAnB,GAA+B,SAA/B,GAA2C,EAAjE,CAFR;AAAA,gBAKKJ,KAAK,CAACQ;AALX;AAAA;AAAA;AAAA;AAAA,YAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAwBH;;GA3BuBT,Q;;KAAAA,Q;AA6BxBA,QAAQ,CAACU,SAAT,GAAqB;AACjBP,EAAAA,KAAK,EAAEL,SAAS,CAACa,MAAV,CAAiBC,UADP;AAEjBN,EAAAA,KAAK,EAAER,SAAS,CAACa,MAAV,CAAiBC,UAFP;AAGjBL,EAAAA,QAAQ,EAAET,SAAS,CAACe,IAAV,CAAeD,UAHR;AAIjBR,EAAAA,IAAI,EAAEN,SAAS,CAACa,MAJC;AAKjBF,EAAAA,QAAQ,EAAEX,SAAS,CAACa,MALH;AAMjBH,EAAAA,QAAQ,EAAEV,SAAS,CAACgB;AANH,CAArB","sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport _uniqueId from \"lodash/uniqueId\";\n\n/**\n * InputBox is a controlled component that represents a input and label.\n *\n * @param props.label (required) label\n * @param props.value (required) value\n * @param props.onChange (required) handler of input value\n * @param props.type \"text\" | \"password\" | \"email\" | ... , text by default\n * @param props.feedback feedback if the input fails validation\n * @param props.required true | false, false by default\n * @returns {JSX.Element}\n */\nexport default function InputBox(props) {\n    const [id] = useState(_uniqueId(\"input-\"));\n\n    return (\n        <div className=\"my-3\">\n            <label className=\"form-label\" htmlFor={id}>\n                {props.label}\n            </label>\n            <input\n                type={props.type === undefined ? \"text\" : props.type}\n                className=\"form-control fs-5\"\n                id={id}\n                value={props.value}\n                onChange={props.onChange}\n                placeholder={\"\"}\n                required={props.required || false}\n                min={0}\n            />\n            <div\n                className={\n                    \"invalid-feedback\" + (props.feedback === undefined ? \" d-none\" : \"\")\n                }\n            >\n                {props.feedback}\n            </div>\n        </div>\n    );\n}\n\nInputBox.propTypes = {\n    label: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n    type: PropTypes.string,\n    feedback: PropTypes.string,\n    required: PropTypes.bool,\n};"]},"metadata":{},"sourceType":"module"}